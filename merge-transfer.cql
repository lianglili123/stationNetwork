match (n:G_node{name:'三越前'}), (m:Z_node{name:'三越前'}) merge (n)-[r:transfer]->(m) return r;
match (n:Z_node{name:'三越前'}), (m:G_node{name:'三越前'}) merge (n)-[r:transfer]->(m) return r;
match (n:G_node{name:'上野'}), (m:H_node{name:'上野'}) merge (n)-[r:transfer]->(m) return r;
match (n:H_node{name:'上野'}), (m:G_node{name:'上野'}) merge (n)-[r:transfer]->(m) return r;
match (n:G_node{name:'上野広小路'}), (m:H_node{name:'上野広小路'}) merge (n)-[r:transfer]->(m) return r;
match (n:T_node{name:'九段下'}), (m:Z_node{name:'九段下'}) merge (n)-[r:transfer]->(m) return r;
match (n:Z_node{name:'九段下'}), (m:T_node{name:'九段下'}) merge (n)-[r:transfer]->(m) return r;
match (n:H_node{name:'仲御徒町'}), (m:G_node{name:'仲御徒町'}) merge (n)-[r:transfer]->(m) return r;
match (n:H_node{name:'北千住'}), (m:C_node{name:'北千住'}) merge (n)-[r:transfer]->(m) return r;
match (n:C_node{name:'北千住'}), (m:H_node{name:'北千住'}) merge (n)-[r:transfer]->(m) return r;
match (n:N_node{name:'四ツ谷'}), (m:M_node{name:'四ツ谷'}) merge (n)-[r:transfer]->(m) return r;
match (n:M_node{name:'四ツ谷'}), (m:N_node{name:'四ツ谷'}) merge (n)-[r:transfer]->(m) return r;
match (n:C_node{name:'国会議事堂前'}), (m:M_node{name:'国会議事堂前'}) merge (n)-[r:transfer]->(m) return r;
match (n:M_node{name:'国会議事堂前'}), (m:C_node{name:'国会議事堂前'}) merge (n)-[r:transfer]->(m) return r;
match (n:M_node{name:'国会議事堂前'}), (m:N_node{name:'国会議事堂前'}) merge (n)-[r:transfer]->(m) return r;
match (n:C_node{name:'国会議事堂前'}), (m:N_node{name:'国会議事堂前'}) merge (n)-[r:transfer]->(m) return r;
match (n:M_node{name:'国会議事堂前'}), (m:G_node{name:'国会議事堂前'}) merge (n)-[r:transfer]->(m) return r;
match (n:C_node{name:'国会議事堂前'}), (m:G_node{name:'国会議事堂前'}) merge (n)-[r:transfer]->(m) return r;
match (n:C_node{name:'大手町'}), (m:M_node{name:'大手町'}) merge (n)-[r:transfer]->(m) return r;
match (n:Z_node{name:'大手町'}), (m:M_node{name:'大手町'}) merge (n)-[r:transfer]->(m) return r;
match (n:T_node{name:'大手町'}), (m:M_node{name:'大手町'}) merge (n)-[r:transfer]->(m) return r;
match (n:M_node{name:'大手町'}), (m:C_node{name:'大手町'}) merge (n)-[r:transfer]->(m) return r;
match (n:Z_node{name:'大手町'}), (m:C_node{name:'大手町'}) merge (n)-[r:transfer]->(m) return r;
match (n:T_node{name:'大手町'}), (m:C_node{name:'大手町'}) merge (n)-[r:transfer]->(m) return r;
match (n:M_node{name:'大手町'}), (m:Z_node{name:'大手町'}) merge (n)-[r:transfer]->(m) return r;
match (n:C_node{name:'大手町'}), (m:Z_node{name:'大手町'}) merge (n)-[r:transfer]->(m) return r;
match (n:T_node{name:'大手町'}), (m:Z_node{name:'大手町'}) merge (n)-[r:transfer]->(m) return r;
match (n:M_node{name:'大手町'}), (m:T_node{name:'大手町'}) merge (n)-[r:transfer]->(m) return r;
match (n:C_node{name:'大手町'}), (m:T_node{name:'大手町'}) merge (n)-[r:transfer]->(m) return r;
match (n:Z_node{name:'大手町'}), (m:T_node{name:'大手町'}) merge (n)-[r:transfer]->(m) return r;
match (n:Y_node{name:'市ケ谷'}), (m:N_node{name:'市ケ谷'}) merge (n)-[r:transfer]->(m) return r;
match (n:N_node{name:'市ケ谷'}), (m:Y_node{name:'市ケ谷'}) merge (n)-[r:transfer]->(m) return r;
match (n:N_node{name:'後楽園'}), (m:M_node{name:'後楽園'}) merge (n)-[r:transfer]->(m) return r;
match (n:M_node{name:'後楽園'}), (m:N_node{name:'後楽園'}) merge (n)-[r:transfer]->(m) return r;
match (n:F_node{name:'新宿三丁目'}), (m:M_node{name:'新宿三丁目'}) merge (n)-[r:transfer]->(m) return r;
match (n:M_node{name:'新宿三丁目'}), (m:F_node{name:'新宿三丁目'}) merge (n)-[r:transfer]->(m) return r;
match (n:C_node{name:'新御茶ノ水'}), (m:M_node{name:'新御茶ノ水'}) merge (n)-[r:transfer]->(m) return r;
match (n:G_node{name:'日本橋'}), (m:T_node{name:'日本橋'}) merge (n)-[r:transfer]->(m) return r;
match (n:T_node{name:'日本橋'}), (m:G_node{name:'日本橋'}) merge (n)-[r:transfer]->(m) return r;
match (n:H_node{name:'日比谷'}), (m:C_node{name:'日比谷'}) merge (n)-[r:transfer]->(m) return r;
match (n:C_node{name:'日比谷'}), (m:H_node{name:'日比谷'}) merge (n)-[r:transfer]->(m) return r;
match (n:C_node{name:'日比谷'}), (m:Y_node{name:'日比谷'}) merge (n)-[r:transfer]->(m) return r;
match (n:H_node{name:'日比谷'}), (m:Y_node{name:'日比谷'}) merge (n)-[r:transfer]->(m) return r;
match (n:C_node{name:'明治神宮前〈原宿〉'}), (m:F_node{name:'明治神宮前〈原宿〉'}) merge (n)-[r:transfer]->(m) return r;
match (n:F_node{name:'明治神宮前〈原宿〉'}), (m:C_node{name:'明治神宮前〈原宿〉'}) merge (n)-[r:transfer]->(m) return r;
match (n:Y_node{name:'有楽町'}), (m:C_node{name:'有楽町'}) merge (n)-[r:transfer]->(m) return r;
match (n:Y_node{name:'有楽町'}), (m:H_node{name:'有楽町'}) merge (n)-[r:transfer]->(m) return r;
match (n:Z_node{name:'永田町'}), (m:M_node{name:'永田町'}) merge (n)-[r:transfer]->(m) return r;
match (n:N_node{name:'永田町'}), (m:M_node{name:'永田町'}) merge (n)-[r:transfer]->(m) return r;
match (n:Y_node{name:'永田町'}), (m:M_node{name:'永田町'}) merge (n)-[r:transfer]->(m) return r;
match (n:N_node{name:'永田町'}), (m:Z_node{name:'永田町'}) merge (n)-[r:transfer]->(m) return r;
match (n:Y_node{name:'永田町'}), (m:Z_node{name:'永田町'}) merge (n)-[r:transfer]->(m) return r;
match (n:Z_node{name:'永田町'}), (m:N_node{name:'永田町'}) merge (n)-[r:transfer]->(m) return r;
match (n:Y_node{name:'永田町'}), (m:N_node{name:'永田町'}) merge (n)-[r:transfer]->(m) return r;
match (n:Z_node{name:'永田町'}), (m:Y_node{name:'永田町'}) merge (n)-[r:transfer]->(m) return r;
match (n:N_node{name:'永田町'}), (m:Y_node{name:'永田町'}) merge (n)-[r:transfer]->(m) return r;
match (n:Z_node{name:'永田町'}), (m:G_node{name:'永田町'}) merge (n)-[r:transfer]->(m) return r;
match (n:N_node{name:'永田町'}), (m:G_node{name:'永田町'}) merge (n)-[r:transfer]->(m) return r;
match (n:Y_node{name:'永田町'}), (m:G_node{name:'永田町'}) merge (n)-[r:transfer]->(m) return r;
match (n:F_node{name:'池袋'}), (m:M_node{name:'池袋'}) merge (n)-[r:transfer]->(m) return r;
match (n:Y_node{name:'池袋'}), (m:M_node{name:'池袋'}) merge (n)-[r:transfer]->(m) return r;
match (n:M_node{name:'池袋'}), (m:F_node{name:'池袋'}) merge (n)-[r:transfer]->(m) return r;
match (n:Y_node{name:'池袋'}), (m:F_node{name:'池袋'}) merge (n)-[r:transfer]->(m) return r;
match (n:M_node{name:'池袋'}), (m:Y_node{name:'池袋'}) merge (n)-[r:transfer]->(m) return r;
match (n:F_node{name:'池袋'}), (m:Y_node{name:'池袋'}) merge (n)-[r:transfer]->(m) return r;
match (n:M_node{name:'淡路町'}), (m:C_node{name:'淡路町'}) merge (n)-[r:transfer]->(m) return r;
match (n:Z_node{name:'渋谷'}), (m:F_node{name:'渋谷'}) merge (n)-[r:transfer]->(m) return r;
match (n:G_node{name:'渋谷'}), (m:F_node{name:'渋谷'}) merge (n)-[r:transfer]->(m) return r;
match (n:F_node{name:'渋谷'}), (m:Z_node{name:'渋谷'}) merge (n)-[r:transfer]->(m) return r;
match (n:G_node{name:'渋谷'}), (m:Z_node{name:'渋谷'}) merge (n)-[r:transfer]->(m) return r;
match (n:F_node{name:'渋谷'}), (m:G_node{name:'渋谷'}) merge (n)-[r:transfer]->(m) return r;
match (n:Z_node{name:'渋谷'}), (m:G_node{name:'渋谷'}) merge (n)-[r:transfer]->(m) return r;
match (n:N_node{name:'溜池山王'}), (m:M_node{name:'溜池山王'}) merge (n)-[r:transfer]->(m) return r;
match (n:G_node{name:'溜池山王'}), (m:M_node{name:'溜池山王'}) merge (n)-[r:transfer]->(m) return r;
match (n:N_node{name:'溜池山王'}), (m:C_node{name:'溜池山王'}) merge (n)-[r:transfer]->(m) return r;
match (n:G_node{name:'溜池山王'}), (m:C_node{name:'溜池山王'}) merge (n)-[r:transfer]->(m) return r;
match (n:G_node{name:'溜池山王'}), (m:N_node{name:'溜池山王'}) merge (n)-[r:transfer]->(m) return r;
match (n:N_node{name:'溜池山王'}), (m:G_node{name:'溜池山王'}) merge (n)-[r:transfer]->(m) return r;
match (n:T_node{name:'茅場町'}), (m:H_node{name:'茅場町'}) merge (n)-[r:transfer]->(m) return r;
match (n:H_node{name:'茅場町'}), (m:T_node{name:'茅場町'}) merge (n)-[r:transfer]->(m) return r;
match (n:Z_node{name:'表参道'}), (m:C_node{name:'表参道'}) merge (n)-[r:transfer]->(m) return r;
match (n:G_node{name:'表参道'}), (m:C_node{name:'表参道'}) merge (n)-[r:transfer]->(m) return r;
match (n:C_node{name:'表参道'}), (m:Z_node{name:'表参道'}) merge (n)-[r:transfer]->(m) return r;
match (n:G_node{name:'表参道'}), (m:Z_node{name:'表参道'}) merge (n)-[r:transfer]->(m) return r;
match (n:C_node{name:'表参道'}), (m:G_node{name:'表参道'}) merge (n)-[r:transfer]->(m) return r;
match (n:Z_node{name:'表参道'}), (m:G_node{name:'表参道'}) merge (n)-[r:transfer]->(m) return r;
match (n:G_node{name:'赤坂見附'}), (m:M_node{name:'赤坂見附'}) merge (n)-[r:transfer]->(m) return r;
match (n:M_node{name:'赤坂見附'}), (m:Z_node{name:'赤坂見附'}) merge (n)-[r:transfer]->(m) return r;
match (n:G_node{name:'赤坂見附'}), (m:Z_node{name:'赤坂見附'}) merge (n)-[r:transfer]->(m) return r;
match (n:M_node{name:'赤坂見附'}), (m:N_node{name:'赤坂見附'}) merge (n)-[r:transfer]->(m) return r;
match (n:G_node{name:'赤坂見附'}), (m:N_node{name:'赤坂見附'}) merge (n)-[r:transfer]->(m) return r;
match (n:M_node{name:'赤坂見附'}), (m:Y_node{name:'赤坂見附'}) merge (n)-[r:transfer]->(m) return r;
match (n:G_node{name:'赤坂見附'}), (m:Y_node{name:'赤坂見附'}) merge (n)-[r:transfer]->(m) return r;
match (n:M_node{name:'赤坂見附'}), (m:G_node{name:'赤坂見附'}) merge (n)-[r:transfer]->(m) return r;
match (n:H_node{name:'銀座'}), (m:M_node{name:'銀座'}) merge (n)-[r:transfer]->(m) return r;
match (n:G_node{name:'銀座'}), (m:M_node{name:'銀座'}) merge (n)-[r:transfer]->(m) return r;
match (n:M_node{name:'銀座'}), (m:H_node{name:'銀座'}) merge (n)-[r:transfer]->(m) return r;
match (n:G_node{name:'銀座'}), (m:H_node{name:'銀座'}) merge (n)-[r:transfer]->(m) return r;
match (n:M_node{name:'銀座'}), (m:G_node{name:'銀座'}) merge (n)-[r:transfer]->(m) return r;
match (n:H_node{name:'銀座'}), (m:G_node{name:'銀座'}) merge (n)-[r:transfer]->(m) return r;
match (n:C_node{name:'霞ケ関'}), (m:M_node{name:'霞ケ関'}) merge (n)-[r:transfer]->(m) return r;
match (n:H_node{name:'霞ケ関'}), (m:M_node{name:'霞ケ関'}) merge (n)-[r:transfer]->(m) return r;
match (n:M_node{name:'霞ケ関'}), (m:C_node{name:'霞ケ関'}) merge (n)-[r:transfer]->(m) return r;
match (n:H_node{name:'霞ケ関'}), (m:C_node{name:'霞ケ関'}) merge (n)-[r:transfer]->(m) return r;
match (n:M_node{name:'霞ケ関'}), (m:H_node{name:'霞ケ関'}) merge (n)-[r:transfer]->(m) return r;
match (n:C_node{name:'霞ケ関'}), (m:H_node{name:'霞ケ関'}) merge (n)-[r:transfer]->(m) return r;
match (n:G_node{name:'青山一丁目'}), (m:Z_node{name:'青山一丁目'}) merge (n)-[r:transfer]->(m) return r;
match (n:Z_node{name:'青山一丁目'}), (m:G_node{name:'青山一丁目'}) merge (n)-[r:transfer]->(m) return r;
match (n:Y_node{name:'飯田橋'}), (m:N_node{name:'飯田橋'}) merge (n)-[r:transfer]->(m) return r;
match (n:T_node{name:'飯田橋'}), (m:N_node{name:'飯田橋'}) merge (n)-[r:transfer]->(m) return r;
match (n:N_node{name:'飯田橋'}), (m:Y_node{name:'飯田橋'}) merge (n)-[r:transfer]->(m) return r;
match (n:T_node{name:'飯田橋'}), (m:Y_node{name:'飯田橋'}) merge (n)-[r:transfer]->(m) return r;
match (n:N_node{name:'飯田橋'}), (m:T_node{name:'飯田橋'}) merge (n)-[r:transfer]->(m) return r;
match (n:Y_node{name:'飯田橋'}), (m:T_node{name:'飯田橋'}) merge (n)-[r:transfer]->(m) return r;
